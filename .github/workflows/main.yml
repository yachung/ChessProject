name: Code Review with GPT

on:
  pull_request:
    types: [opened, synchronize] # PR이 생성되거나 업데이트될 때 실행

jobs:
  code_review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get list of changed files
        id: changes
        run: |
          echo "::set-output name=files::$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})"

      - name: Review code with GPT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
        run: |
          # 환경 변수 및 수정된 파일 목록 가져오기
          FILES="${{ steps.changes.outputs.files }}"
          REVIEW=""

          # 각 파일의 내용을 가져와서 GPT에게 전달할 텍스트 생성
          for FILE in $FILES; do
            CONTENT=$(cat "$FILE")
            PROMPT="Please review the following code file and provide feedback:\n\nFile: $FILE\n\nContent:\n$CONTENT"
            
            # GPT-4 API를 사용해 코드 리뷰 요청
            RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -d '{
                "model": "gpt-4",
                "messages": [{"role": "user", "content": "'"$PROMPT"'"}]
              }' | jq -r '.choices[0].message.content')
            
            # 리뷰 결과를 저장
            REVIEW+="File: $FILE\n\n$RESPONSE\n\n---\n"
          done

          # GitHub PR에 리뷰 결과 게시
          echo "$REVIEW" | gh pr comment ${{ github.event.pull_request.number }} --body -
          
      - name: Post review as a PR comment
        uses: actions/github-script@v3
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              body: process.env.REVIEW
            })
